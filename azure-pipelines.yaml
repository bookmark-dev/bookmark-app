name: $(date:yyyyMMdd)$(rev:.rr)

pr:
  - synaodev

trigger:
- synaodev

stages:
  - stage: build
    jobs:
      - job: run_build
        steps:
          - script: dotnet build
  - stage: test
    jobs:
      - job: run_tests
        steps:
          - script: dotnet test
  - stage: analyze
    jobs:
      - job: run_analysis
        pool:
          vmImage: ubuntu-18.04
        steps:
          - task: DotnetGlobalToolInstaller@0
            inputs:
              name: "dotnet-sonarscanner"
          - script: |
              dotnet sonarscanner begin /k:"bookmark-webapp" /o:"bookmark-dev" /d:sonar.login=$(SonarToken) /d:sonar.host.url="https://sonarcloud.io/"
              dotnet build
              dotnet sonarscanner end /d:sonar.login=$(SonarToken)
  - stage: pack
    jobs:
      - job: pack_client
        steps:
          - task: Docker@2
            inputs:
              command: login
              containerRegistry: bookmark-acr
          - script: |
              docker image build --file client.dockerfile --tag $(AzureContainerRegistry)/bookmark-client:latest .
              docker image push $(AzureContainerRegistry)/bookmark-client:latest
          - task: Docker@2
            inputs:
              command: logout
              containerRegistry: bookmark-acr
      - job: pack_restapi
        steps:
          - task: Docker@2
            inputs:
              command: login
              containerRegistry: bookmark-acr
          - script: |
              docker image build --file restapi.dockerfile --tag $(AzureContainerRegistry)/bookmark-restapi:latest .
              docker image push $(AzureContainerRegistry)/bookmark-restapi:latest
          - task: Docker@2
            inputs:
              command: logout
              containerRegistry: bookmark-acr
      - job: pack_ormdata
        steps:
          - task: Docker@2
            inputs:
              command: login
              containerRegistry: bookmark-acr
          - script: |
              docker image build --file ormdata.dockerfile --tag $(AzureContainerRegistry)/bookmark-ormdata:latest .
              docker image push $(AzureContainerRegistry)/bookmark-ormdata:latest
          - task: Docker@2
            inputs:
              command: logout
              containerRegistry: bookmark-acr
  - stage: deploy
    jobs:
      - job: deploy_app
        pool:
          vmImage: ubuntu-18.04
        steps:
          - task: AzureWebAppContainer@1
            displayName: Web App Container
            inputs:
              appName: bookmark-webapp
              azureSubscription: azure
              resourceGroupName: $(AzureResourceGroup)
              multicontainerConfigFile: docker-compose.yaml
              deployToSlotOrASE: true
