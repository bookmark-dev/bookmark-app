// <auto-generated />
using System;
using BookMark.RestApi.Databases;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookMark.RestApi.Migrations
{
    [DbContext(typeof(BookMarkDbContext))]
    partial class BookMarkDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BookMark.RestApi.Models.Appointment", b =>
                {
                    b.Property<long>("AppointmentID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("AppointmentID");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("BookMark.RestApi.Models.User", b =>
                {
                    b.Property<long>("UserID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = 1L,
                            Name = "synaodev",
                            Password = "$2a$11$vNhy7C7CoYNcWJZwkhb1ceXlGlMY7eqV3hU4MFpjAOhm9ugI9Q3tK"
                        });
                });

            modelBuilder.Entity("BookMark.RestApi.Models.UserAppointment", b =>
                {
                    b.Property<long>("UserAppointmentID")
                        .HasColumnType("bigint");

                    b.Property<long>("AppointmentID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserID")
                        .HasColumnType("bigint");

                    b.HasKey("UserAppointmentID");

                    b.HasIndex("AppointmentID");

                    b.HasIndex("UserID");

                    b.ToTable("UserAppointment");
                });

            modelBuilder.Entity("BookMark.RestApi.Models.UserAppointment", b =>
                {
                    b.HasOne("BookMark.RestApi.Models.Appointment", "Appointment")
                        .WithMany("UserAppointments")
                        .HasForeignKey("AppointmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookMark.RestApi.Models.User", "User")
                        .WithMany("UserAppointments")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
